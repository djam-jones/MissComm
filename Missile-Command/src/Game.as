package  {	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.events.Event;;	/**	 * @author Djamali	 */	public class Game extends Sprite{				private var _launcher 	:	Launcher;		private var _launchers	:	Array;				private var _city		:	MovieClip;		private var _cities		:	Array;				private var totalturrets:	int = 3;		private var totalCities :	int = 4;				private var _rockets 	: 	Array;		private var _enemies	:	Array;				private var square		:	Sprite = new Sprite();		public function Game() 		{			super();			addEventListener(Event.ADDED_TO_STAGE, init);			addEventListener(Event.ENTER_FRAME, update);		}				private function init(e:Event = null):void		{			removeEventListener(Event.ADDED_TO_STAGE, init);						_rockets = [];			_enemies = [];						addChild(square);			square.graphics.lineStyle(3,0xa9a9a9);			square.graphics.beginFill(0xa9a9a9);			square.graphics.drawRect(0, 0, stage.stageWidth, 95);			square.graphics.endFill();			square.x = stage.stageWidth/2 - square.width/2;			square.y = stage.stageHeight - 95;						_launchers = [];			_cities	= [];						for(var i:int = 0; i < totalturrets; i++)			{					_launcher = new Launcher();									_launcher.x = stage.stageWidth / (totalturrets - 1) * i;				_launcher.y = stage.stageHeight - 35;				addChild(_launcher);				_launchers.push(_launcher);			}						for(var j:int = 0; j < totalCities; j++)			{				_city = new City();								_city.x = (stage.stageWidth)/ (totalCities) * j;				_city.y = stage.stageHeight - 50;				addChild(_city);				_cities.push(_city);			}						_launcher.addEventListener(Launcher.SHOOT, fire);		}				private function update(e:Event):void		{			var l:int = _rockets.length;			for(var i:int = 0; i < l; i++)			{				( _rockets[i] as HeroMissile).update();			}						var em:int = _enemies.length;			for(var en:int = 0; en < em; en++)			{				( _enemies[en] as EnemyMissile).update();			}									var b:int = _rockets.length;			for (var a:int = b - 1; a >= 0; a--)			{   				if(_rockets[a].y <= 0 || _rockets[a].x >= stage.stageWidth + 100 || _rockets[a].x <= -100)   				{					stage.removeChild(_rockets[a]);					_rockets.splice(a, 1);					trace("REMOVED");     			}			}		}				private function fire(e:Event):void		{			var newRocket:HeroMissile = new HeroMissile();			var index:int = Math.floor(Math.random() * _launchers.length);						newRocket.setDir(_launchers[index].turretRotation);						newRocket.x = _launchers[index].x;			newRocket.y = _launchers[index].y;						stage.addChildAt(newRocket, 1);						_rockets.push(newRocket);		}	}	}